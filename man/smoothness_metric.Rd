% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smoothness_metric.R
\name{smoothness_metric}
\alias{smoothness_metric}
\title{Function for smoothness metric}
\usage{
smoothness_metric(spatialcoords, labels, k = 6)
}
\arguments{
\item{spatialcoords}{Numeric matrix containing spatial coordinates of points,
formatted as nrow = number of points, ncol = 2 (assuming x and y
dimensions). For example, `spatialcoords = spatialCoords(spe)`.}

\item{labels}{Numeric vector of cluster labels for each point. For example,
`labels <- as.numeric(colData(spe)$label)`.}

\item{k}{Number of k nearest neighbors to use in calculation. Default = 6
(from 10x Genomics Visium platform).}
}
\value{
Returns value of evaluation metric.
}
\description{
Function for clustering smoothness evaluation metric
}
\details{
Function to calculate smoothness of cluster boundaries, defined as average
number of nearest neighbors per point that are from a different cluster.
}
\examples{
library(STexampleData)
library(scran)
library(scater)

# load data
spe <- Visium_humanDLPFC()
# keep spots over tissue
spe <- spe[, colData(spe)$in_tissue == 1]

# run smoothclust
# using "knn" method for faster runtime in this example
# see vignette for extended example using default method
spe <- smoothclust(spe, method = "knn", k = 6)

# calculate logcounts
spe <- logNormCounts(spe)

# preprocessing steps for clustering
# remove mitochondrial genes
is_mito <- grepl("(^MT-)|(^mt-)", rowData(spe)$gene_name)
spe <- spe[!is_mito, ]
# select top highly variable genes (HVGs)
dec <- modelGeneVar(spe)
top_hvgs <- getTopHVGs(dec, prop = 0.1)
spe <- spe[top_hvgs, ]

# dimensionality reduction
set.seed(123)
spe <- runPCA(spe)

# run k-means clustering
set.seed(123)
k <- 5
clust <- kmeans(reducedDim(spe, "PCA"), centers = k)$cluster
colLabels(spe) <- factor(clust)

# calculate smoothness metric
smoothness_metric(spatialCoords(spe), as.numeric(colData(spe)$label))

}
