% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smoothclust.R
\name{smoothclust}
\alias{smoothclust}
\title{smoothclust}
\usage{
smoothclust(input, bandwidth = 0.05)
}
\arguments{
\item{input}{Input data, assumed to be provided as \code{SpatialExperiment}
object containing matrix of spatial coordinates in \code{spatialCoords}
slot and log-transformed normalized counts in assay named \code{logcounts}.}

\item{bandwidth}{Parameter defining the bandwidth for smoothing, expressed as
the proportion of the width or height (whichever is greater) of the tissue
area. For example, a bandwidth of 0.05 will smooth logcounts across values
measured within a circle of radius equal to 5% of the width or height
(whichever is greater) of the tissue area.}
}
\value{
Returns the \code{SpatialExperiment} object with a new assay named
  \code{logcounts_smooth} containing spatially smoothed logcounts values.
}
\description{
Function to run 'smoothclust' spatial clustering algorithm.
}
\details{
Function to run 'smoothclust' spatial clustering algorithm.
}
\examples{
library(SpatialExperiment)
library(STexampleData)
library(scran)

# download data object
spe <- Visium_humanDLPFC()
spe <- spe[, colData(spe)$in_tissue == 1]

# calculate highly variable genes (HVGs)
spe <- logNormCounts(spe)
is_mito <- grepl("(^MT-)|(^mt-)", rowData(spe)$gene_name)
spe <- spe[!is_mito, ]
# keep full object for plotting
spe_full <- spe

dec <- modelGeneVar(spe)
top_hvgs <- getTopHVGs(dec, prop = 0.1)
spe <- spe[top_hvgs, ]
dim(spe)

# run smoothclust
spe <- smoothclust(spe)

}
